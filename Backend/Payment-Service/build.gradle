import org.openapitools.generator.gradle.plugin.tasks.GenerateTask
plugins {
	 id 'java'
     id 'org.openapi.generator' version '7.3.0'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}
sourceSets {
	main {
		java {
			srcDir "$buildDir/generated/src/main/java"
		}
	}
}
tasks.named("openApiGenerate", GenerateTask) {
	generatorName.set("spring")
	inputSpec.set("$rootDir/src/main/resources/api/payment-service.yaml")
	outputDir.set("$buildDir/generated")
	apiPackage.set("com.foodapp.cart.api")
	modelPackage.set("com.foodapp.cart.model")
	configOptions.set([
			interfaceOnly: "true",
			useTags      : "true",
			dateLibrary  : "java8",
        useJakartaEe : "true"
	])
}
group = 'com.foodOrder'
version = '0.0.1-SNAPSHOT'
description = 'Payment Service for a food ordering platform'
tasks.named("compileJava") {
    dependsOn("openApiGenerate")
}


java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2025.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-cassandra-reactive'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.15'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.4'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
