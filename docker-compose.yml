services:
  service-registry:
    build: ./Backend/Service-Registry
    container_name: service-registry
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://service-registry:8761/actuator/health"]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - app-network

  config-server:
    build: ./Backend/config-Server
    container_name: config-server
    ports:
      - "8888:8888"
    volumes:
      - ./config-repo:/app/config-repo
    depends_on:
      - service-registry
    networks:
      - app-network

  api-gateway:
    build: ./Backend/API-Gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      - app-network

  authorization-service:
    build: ./Backend/Authorization-Service
    container_name: authorization-service
    ports:
      - "8081:8080"
    depends_on:
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      - app-network

  cart-service:
    build: ./Backend/Cart-Service
    container_name: cart-service
    ports:
      - "8082:8080"
    depends_on:
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      - app-network

  catalog-service:
    build: ./Backend/Catalog-Service
    container_name: catalog-service
    ports:
      - "8083:8080"
    depends_on:
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      - app-network

  customer-service:
    build: ./Backend/Customer-Service
    container_name: customer-service
    ports:
      - "8085:8080"
    depends_on:
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      - app-network

  delivery-service:
    build: ./Backend/Delivery-Service
    container_name: delivery-service
    ports:
      - "8086:8080"
    depends_on:
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      - app-network

  order-service:
    build: ./Backend/Order-Service
    container_name: order-service
    ports:
      - "8087:8080"
    depends_on:
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      - app-network

  payment-service:
    build: ./Backend/Payment-Service
    container_name: payment-service
    ports:
      - "8088:8080"
    depends_on:
      service-registry:
        condition: service_healthy
      config-server:
        condition: service_started
    networks:
      - app-network

  frontend:
    build: ./Frontend
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - api-gateway
    networks:
      - app-network

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: foodapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge